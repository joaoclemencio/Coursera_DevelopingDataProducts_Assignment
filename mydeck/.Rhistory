install.packages("shiny")
library(shiny)
setwd("~/Shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Shiny/app2")
install.packages("UsingR")
data(galton)
library(UsingR)
data(galton)
data(galton)
runApp()
install.packages("shinyapps")
install.packages("devtools")
install.packages("Rtools")
install.packages("rtools")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
rsconnect::setAccountInfo(name='joaoclemencio', token='F91849F30AE8F08949B873FA137D61D0', secret='cVqtBpd53yjhcSlek5ZhXu2nHYXzQCBkm1LAWLOl')
rsconnect::setAccountInfo(name='joaoclemencio', token='F91849F30AE8F08949B873FA137D61D0', secret='cVqtBpd53yjhcSlek5ZhXu2nHYXzQCBkm1LAWLOl')
library(shinyapps)
rsconnect::setAccountInfo(name='joaoclemencio', token='F91849F30AE8F08949B873FA137D61D0', secret='cVqtBpd53yjhcSlek5ZhXu2nHYXzQCBkm1LAWLOl')
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='joaoclemencio', token='F91849F30AE8F08949B873FA137D61D0', secret='cVqtBpd53yjhcSlek5ZhXu2nHYXzQCBkm1LAWLOl')
deployApp()
innstall.packages("manipulate")
install.packages("manipulate")
library(manipulate)
manipulate(plot(1:x, x = slider(1,100)))
manipulate(plot(1:x), x = slider(1,100)))
myHist <- function(mu) {
hist(
galton$child,
col = "blue",
breaks = 100
)
lines(
c(mu, mu),
c(0, 150),
col = "red",
lwd = 5
)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
myHist(50)
myHist(45)
myHist(200)
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
install_github('ramnathv/rCharts')
require(devtools)
install_github('ramnathv/rCharts')
install.packages("rCharts")
library(rCharts)
names(iris) = gsub("\\.", "", names(iris))
iris
names(iris)
rPlot(SepalLengt ~ SepalWidth | Species, data = iris, color = "Species", type = "point")
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = "Species", type = "point")
dTable(airquality, sPaginationType = "full_numbers")
library(shiny)
runApp()
runApp()
runApp()
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidyfy)
library(slidify)
setwd("~/GitHub/Coursera_DevelopingDataProducts_Assignment")
author("mydeck")
library(ggplot2)
data(iris)
head(iris)
qplot(Sepal.Length, Sepal.Width, data = iris)
qplot(Sepal.Length, Sepal.Width, data = iris, color="Species")
qplot(Sepal.Length, Sepal.Width, data = iris, color=Species)
## Second slide y'all
library(manipulate)
ggplot(iris, aes(Sepal.Length, Sepal.Width), geom="scatter")
ggplot(iris, aes(Sepal.Length, Sepal.Width, color="Species") + geom.point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, color="Species")) + geom.point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, color="Species")) + geom_point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species)) + geom_point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species)) + geom_point(size = Petal.Width)
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species)) + geom_point(data = iris, size = Petal.Width)
```
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species)) + geom_point(data = iris, size = Petal.Width)
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species)) + geom_point(size = iris$Petal.Width)
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point()
manipulate(ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width * x)) + geom_point(), x = slider(0.1, 2, step = 0.1)
manipulate(ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width * x)) + geom_point(), x = slider(0.1, 2, step = 0.1))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(2, 10))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(2, 100))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(2, 15))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(0.1, 15))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(1, 1))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(1, 2))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(1, 5))
ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width)) + geom_point() + scale_size(range = c(1, 10))
manipulate(ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width )) + geom_point() + scale_size(range = c(1, x)), x = slider(5, 15, step = 0.1))
manipulate(ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width )) + geom_point() + scale_size(range = c(1, x)), x = slider(5, 15, step = 0.1))
manipulate(ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species, size = Petal.Width )) + geom_point() + scale_size(range = c(1, x)), x = slider(5, 15, step = 0.1))
??show
?show
?redict
?predict
?dgamma
?getS3method
?getMethod
??s4
?showMethods
?getmethod
?getMethod
